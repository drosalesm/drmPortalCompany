---
import { SocialNetworks } from "@data"; // Import your data.json

const { contact, subtitleContact, name, subtitle, formData } = SocialNetworks;



// Create the handler for submitting the form
async function handleSubmit(event: Event) {
  event.preventDefault(); // Prevent the default form submission
  
  const form = event.target as HTMLFormElement;
  const formFields = new FormData(form);

  // Use formFields to extract the form values
  const data = {
    name: formFields.get("name")?.toString() ?? "",
    email: formFields.get("email")?.toString() ?? "",
    message: formFields.get("message")?.toString() ?? "",
  };

  

  // Send the data to your server endpoint
  try {
    const response = await fetch("/send-email", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });

    const result = await response.json();

    if (response.ok && result.success) {
      alert("Message sent successfully!");
    } else {
      alert("There was an error sending the message: " + (result.error || "Unknown error"));
    }
  } catch (error) {
    alert("Failed to send message: " + error);
  }
}


---

<footer class="bg-gray-900 text-gray-300 py-12">
  <div class="container mx-auto px-6 lg:px-12">
    <!-- Contact Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Contact Form -->
      <div>
        <h3 class="text-2xl font-semibold text-white">{contact}</h3>
        <p class="mt-2 text-gray-400">
          {subtitleContact}
        </p>
        <form id="contact-form" class="mt-6 space-y-4">
          <div>
            <label for="name" class="block text-sm font-medium"
              >{formData.name}:</label
            >
            <input
              type="text"
              id="name"
              name="name"
              required
              class="w-full px-4 py-2 mt-2 rounded-md border border-gray-600 bg-gray-800 text-gray-200 focus:outline-none focus:border-indigo-500"
            />
          </div>
          <div>
            <label for="email" class="block text-sm font-medium"
              >{formData.email}:</label
            >
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full px-4 py-2 mt-2 rounded-md border border-gray-600 bg-gray-800 text-gray-200 focus:outline-none focus:border-indigo-500"
            />
          </div>
          <div>
            <label for="message" class="block text-sm font-medium"
              >{formData.message}:</label
            >
            <textarea
              id="message"
              name="message"
              rows="4"
              required
              class="w-full px-4 py-2 mt-2 rounded-md border border-gray-600 bg-gray-800 text-gray-200 focus:outline-none focus:border-indigo-500"
            ></textarea>
          </div>
          <button
            type="submit"
            class="px-6 py-2 bg-indigo-500 hover:bg-indigo-600 text-white font-semibold rounded-md shadow-lg transition"
          >
            {formData.btnText}
          </button>
        </form>
      </div>
      <!-- Social Links -->
      <div>
        <h3 class="text-2xl font-semibold text-white">{name}</h3>
        <p class="mt-2 text-gray-400">
          {subtitle}
        </p>
        <div class="mt-6 space-y-4">
          {
            SocialNetworks.list.map((socialNetwork, index) => (
              <a
                href={socialNetwork.url}
                target="_blank"
                class="flex items-center text-gray-300 hover:text-white transition"
              >
                <img src={socialNetwork.imageUrl} alt="" class="w-6 h-6 mr-2" />
                {socialNetwork.name}
              </a>
            ))
          }
        </div>
      </div>
    </div>
    <!-- Footer Bottom -->
    <div class="mt-12 text-center text-gray-500 text-sm">
      Â© 2024 DRM Soluciones de Software. Todos los derechos reservados.
    </div>
  </div>

    <!-- Modal -->
    <div id="modal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 z-50 hidden">
      <div class="bg-white rounded-lg p-6 max-w-sm w-full">       
        <h2 class="text-center  text-xl font-semibold text-gray-800 mb-4" id="modal-title">Success!</h2>
        <p class="text-gray-700" id="modal-message">Message sent successfully!</p>
        <button
          id="close-modal"
          class="mt-4 px-4 py-2 bg-gray-800 text-white rounded-md focus:outline-none"
        >
          Cerrar
        </button>
      </div>
    </div>

</footer>




<script type="module">
  const form = document.getElementById('contact-form');
  const modal = document.getElementById('modal');
  const modalTitle = document.getElementById('modal-title');
  const modalMessage = document.getElementById('modal-message');
  const closeModalBtn = document.getElementById('close-modal');


  form?.addEventListener('submit', async (event) => {
    event.preventDefault();

    const formData = new FormData(form);
    const data = {
      name: formData.get("name"),
      email: formData.get("email"),
      message: formData.get("message"),
    };

    try {
      const response = await fetch('/api/send-email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();

      if (response.ok && result.success) {
        modalTitle.textContent = 'Enviado';        
        modalMessage.textContent = 'Mensaje Enviado de forma exitosa !';
        modal.classList.remove('hidden');
        setTimeout(() => {
          modal.classList.add('hidden');
        }, 3000);

      } else {
        modalTitle.textContent = 'Error';
        modalMessage.textContent = 'Hubo un problema al enviar tu mensaje: ' + (result.error || 'Unknown error');
        modal.classList.remove('hidden');      }
    } catch (error) {
      modalTitle.textContent = 'Error';
      modalMessage.textContent = 'Fallo al enviar el mensaje: ' + error;
      modal.classList.remove('hidden');    }
  });




//Modal


  // Close the modal when the "close" button is clicked
  closeModalBtn?.addEventListener('click', () => {
    modal.classList.add('hidden');
  });

</script>